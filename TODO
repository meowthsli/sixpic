finish parser
add pointers
add main
forward declarations
real conditions (in if)
optimize stuff like : bra $4, 4: (jump to the next line)
eliminate dead code after branches before next label (should be generated at all, surprising, but look at asm from test6, label $5 has a return after a bra $4)
eliminate bbs that are a single jump, except if the previous one (in the code) needs that jump

make sure jump like this can't happen (from test5)
000012 0164		    cpfsgt  1
000014 01D0		    bra     $3
000016 01D0		    bra     $4
			$3:
000018 1200		    return  0
			$4:
00001A 0300		    sleep   
p-e s'arranger pour que bloc si vrai soit tjrs immediatement apres, donc si on a vrai, on skippe le jump. pour que ca marhe, il faudrait aussi eliminer les bra $4, $4:

revoir le systeme de conditions au complet, il est degeulasse

avoir vraie comparaison pour switch, egalite, pas inegalite louche

pour avoir comparaison d'egalite avec cste, load cste dans wreg, et CPFSEQ


TODO : donner code avec makefile qui execute les tests
remise ift6232 tp1


00000A 0150		    movf    1, w
00000C 006E		    movwf   0
plutot faire movff 1, 0 -- verifier que ca fait bien la meme chose

registres sont pas sauvegardes, donc adieu recursion, et p-e calls nestes, voir ex 8, qui ne fait pas ce qu'il devrait.

+= is not supported, so probably neither are his brothers

test5 avec fall through au case 0
			$7:
000022 0150		    movf    1, w
000024 006E		    movwf   0
000026 002A		    incf    0
000028 0050		    movf    0, w
00002A 016E		    movwf   1
00002C 00D0		    bra     $9
grossierement inefficace
